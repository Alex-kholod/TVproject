# Generated by Django 4.2.6 on 2023-12-07 13:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BuildLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название линии')),
            ],
            options={
                'verbose_name': 'Сборочная линия',
                'verbose_name_plural': 'Сборочные линии',
                'db_table': 'build_line',
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('car_name', models.CharField(max_length=100, verbose_name='Название машины')),
                ('capacity', models.IntegerField(verbose_name='Вместимость машины')),
            ],
            options={
                'verbose_name': 'Машина',
                'verbose_name_plural': 'Машины',
                'db_table': 'Car',
            },
        ),
        migrations.CreateModel(
            name='CaseBox',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название корпуса')),
                ('price', models.FloatField(verbose_name='Стоимость корпуса')),
                ('width', models.FloatField(verbose_name='Ширина')),
                ('length', models.FloatField(verbose_name='Длина')),
                ('depth', models.FloatField(verbose_name='Глубина')),
            ],
            options={
                'verbose_name': 'Корпус',
                'verbose_name_plural': 'Корпусы',
                'db_table': 'CaseBox',
            },
        ),
        migrations.CreateModel(
            name='Distributor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=200, verbose_name='ФИО покупателя')),
                ('email', models.EmailField(max_length=254, verbose_name='Почта покупателя')),
                ('phone', models.IntegerField(verbose_name='Телефон покупателя')),
            ],
            options={
                'verbose_name': 'Покупатель',
                'verbose_name_plural': 'Покупатели',
                'db_table': 'Distributor',
            },
        ),
        migrations.CreateModel(
            name='Loudspeakers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название колонок')),
                ('count', models.IntegerField(verbose_name='Количество колонок')),
                ('price', models.FloatField(verbose_name='Стоимость колонок')),
            ],
            options={
                'verbose_name': 'Колонки',
                'verbose_name_plural': 'Колонки',
                'db_table': 'Loudspeakers',
            },
        ),
        migrations.CreateModel(
            name='Mainplata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название платы')),
                ('price', models.FloatField(verbose_name='Стоимость платы')),
            ],
            options={
                'verbose_name': 'Главная плата',
                'verbose_name_plural': 'Главные платы',
                'db_table': 'Mainplata',
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название производителя')),
                ('address', models.CharField(max_length=300, verbose_name='Адрес производителя')),
                ('email', models.EmailField(max_length=254, verbose_name='Почта производителя')),
                ('phone', models.IntegerField(verbose_name='Телефон производителя')),
            ],
            options={
                'verbose_name': 'Производитель',
                'verbose_name_plural': 'Производители',
                'db_table': 'Manufacturer',
            },
        ),
        migrations.CreateModel(
            name='Matrix',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название матрицы')),
                ('contrast', models.FloatField(verbose_name='Контрастность')),
                ('resolution', models.FloatField(verbose_name='Разрешение')),
                ('price', models.FloatField(verbose_name='Цена матрицы')),
            ],
            options={
                'verbose_name': 'Матрица',
                'verbose_name_plural': 'Матрицы',
                'db_table': 'Matrix',
            },
        ),
        migrations.CreateModel(
            name='MatrixType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(max_length=50, verbose_name='Тип матрицы')),
            ],
            options={
                'verbose_name': 'Тип матрицы',
                'verbose_name_plural': 'Типы матриц',
                'db_table': 'Matrix_type',
            },
        ),
        migrations.CreateModel(
            name='Powerboard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название платы питания')),
                ('price', models.FloatField(verbose_name='Стоимость платы питания')),
                ('power', models.IntegerField(verbose_name='Мощность')),
            ],
            options={
                'verbose_name': 'Плата питания',
                'verbose_name_plural': 'Платы питания',
                'db_table': 'Powerboard',
            },
        ),
        migrations.CreateModel(
            name='Specifications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название спецификации')),
                ('casebox', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.casebox', verbose_name='Корпус')),
                ('loudspeakers', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.loudspeakers', verbose_name='Колонки')),
                ('mainplata', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.mainplata', verbose_name='Главная плата')),
                ('matrix', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.matrix', verbose_name='Матрица')),
                ('powerboard', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.powerboard', verbose_name='Плата питания')),
            ],
            options={
                'verbose_name': 'Спецификация',
                'verbose_name_plural': 'Спецификации',
                'db_table': 'Specifications',
            },
        ),
        migrations.CreateModel(
            name='StaffConstructor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=200, verbose_name='ФИО сотрудника')),
                ('position', models.CharField(max_length=100, verbose_name='Должность')),
            ],
            options={
                'verbose_name': 'Сотрудник цеха',
                'verbose_name_plural': 'Сотрудники цеха',
                'db_table': 'Staff_constructor',
            },
        ),
        migrations.CreateModel(
            name='StaffStorage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=200, verbose_name='ФИО сотрудника')),
                ('position', models.CharField(max_length=100, verbose_name='Должность')),
            ],
            options={
                'verbose_name': 'Сотрудник склада',
                'verbose_name_plural': 'Сотрудники склада',
                'db_table': 'Staff_storage',
            },
        ),
        migrations.CreateModel(
            name='Storehouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название склада')),
                ('address', models.CharField(max_length=300, verbose_name='Адрес склада')),
                ('capacity', models.FloatField(verbose_name='Вместимость склада')),
            ],
            options={
                'verbose_name': 'Склад',
                'verbose_name_plural': 'Склады',
                'db_table': 'Storehouse',
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название поставщика')),
                ('address', models.CharField(max_length=300, verbose_name='Адрес поставщика')),
                ('email', models.EmailField(max_length=254, verbose_name='Почта поставщика')),
                ('phone', models.IntegerField(verbose_name='Телефон поставщика')),
            ],
            options={
                'verbose_name': 'Поставщик',
                'verbose_name_plural': 'Поставщики',
                'db_table': 'Supplier',
            },
        ),
        migrations.CreateModel(
            name='TV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tv_model', models.CharField(max_length=150, verbose_name='Модель телевизора')),
                ('price', models.FloatField(verbose_name='Цена телевизора')),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.manufacturer', verbose_name='Производитель')),
                ('specification', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.specifications', verbose_name='Спецификация')),
            ],
            options={
                'verbose_name': 'Телевизор',
                'verbose_name_plural': 'Телевизоры',
                'db_table': 'TV',
            },
        ),
        migrations.CreateModel(
            name='Supply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(verbose_name='Количество')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Дата приемки')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.staffstorage', verbose_name='Сотрудник')),
                ('storehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.storehouse', verbose_name='Склад')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.supplier', verbose_name='Поставщик')),
                ('tv', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.tv', verbose_name='Компонент')),
            ],
            options={
                'verbose_name': 'Приемка',
                'verbose_name_plural': 'Приемки',
                'db_table': 'Supply',
            },
        ),
        migrations.CreateModel(
            name='Stocks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stock_count', models.IntegerField(verbose_name='Остаток')),
                ('storehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.storehouse', verbose_name='Склад')),
                ('tv', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.tv', verbose_name='Модель телевизора')),
            ],
            options={
                'verbose_name': 'Остатки',
                'verbose_name_plural': 'Остатки',
                'db_table': 'Stocks',
            },
        ),
        migrations.CreateModel(
            name='Shipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(verbose_name='Количество')),
                ('date', models.DateTimeField(auto_now_add=True, verbose_name='Дата отгрузки')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.car', verbose_name='Машина доставки')),
                ('distributor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.distributor', verbose_name='Покупатель')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.staffstorage', verbose_name='Сотрудник')),
                ('storehouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.storehouse', verbose_name='Склад')),
                ('tv', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.tv', verbose_name='Товар')),
            ],
            options={
                'verbose_name': 'Отгрузка',
                'verbose_name_plural': 'Отгрузки',
                'db_table': 'shipment',
            },
        ),
        migrations.AddField(
            model_name='matrix',
            name='matrix_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app.matrixtype', verbose_name='Тип матрицы'),
        ),
        migrations.CreateModel(
            name='Build',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('build_date', models.DateTimeField(auto_now_add=True, verbose_name='Дата сборки')),
                ('count', models.IntegerField(verbose_name='Количество')),
                ('line', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.buildline', verbose_name='Сборочная линия')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.staffconstructor', verbose_name='Сборщик')),
                ('tv', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.tv', verbose_name='Модель телевизора')),
            ],
            options={
                'verbose_name': 'Сборка',
                'verbose_name_plural': 'Сборки',
                'db_table': 'build',
            },
        ),
    ]
